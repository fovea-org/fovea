@import "./color";
@import "./elevation";
@import "./font";
@import "./shape";
@import "./size";
@import "./timing-function";
@import "./duration";

$body1-line-height: fontSize(24px);
$caption-line-height: fontSize(20px);

@mixin divider($position: bottom, $color: color(black, 12)) {
	@if ($position == top) {
		box-shadow: 0 -1px 0 0 #{$color};
	} @else if ($position == right) {
		box-shadow: 1px 0 0 0 #{$color};
	} @else if ($position == bottom) {
		box-shadow: 0 1px 0 0 #{$color};
	} @else if ($position == left) {
		box-shadow: -1px 0 0 0 #{$color};
	} @else {
		// All sides
		box-shadow: 0 0 0 1px #{$color};
	}
}

@mixin typographyBase {
	font-family: $font-family;
	color: $color-typography;
	text-rendering: optimizeSpeed;
	-moz-osx-font-smoothing: grayscale;
	-webkit-font-smoothing: antialiased;
	margin: 0;
	padding: 0;
}

@mixin headline1 {
	@include typographyBase();
	font-size: fontSize(96px);
	line-height: fontSize(96px);
	letter-spacing: -1.5px;
	font-weight: $font-weight-light;
	text-decoration: inherit;
	text-transform: inherit;
}

@mixin headline2 {
	@include typographyBase();
	font-size: fontSize(60px);
	line-height: fontSize(60px);
	letter-spacing: -0.5px;
	font-weight: $font-weight-light;
	text-decoration: inherit;
	text-transform: inherit;
}

@mixin headline3 {
	@include typographyBase();
	font-size: fontSize(48px);
	line-height: fontSize(50px);
	letter-spacing: 0;
	font-weight: $font-weight-regular;
	text-decoration: inherit;
	text-transform: inherit;
}

@mixin headline4 {
	@include typographyBase();
	font-size: fontSize(34px);
	line-height: fontSize(40px);
	letter-spacing: .25px;
	font-weight: $font-weight-regular;
	text-decoration: inherit;
	text-transform: inherit;
}

@mixin headline5 {
	@include typographyBase();
	font-size: fontSize(24px);
	line-height: fontSize(38px);
	letter-spacing: 0;
	font-weight: $font-weight-regular;
	text-decoration: inherit;
	text-transform: inherit;
}

@mixin headline6 {
	@include typographyBase();
	font-size: fontSize(20px);
	line-height: fontSize(32px);
	letter-spacing: .15px;
	font-weight: $font-weight-medium;
	text-decoration: inherit;
	text-transform: inherit;
}

@mixin subtitle1 {
	@include typographyBase();
	font-size: fontSize(16px);
	line-height: fontSize(28px);
	letter-spacing: .15px;
	font-weight: $font-weight-regular;
	text-decoration: inherit;
	text-transform: inherit;
}

@mixin subtitle2 {
	@include typographyBase();
	font-size: fontSize(14px);
	line-height: fontSize(22px);
	letter-spacing: .1px;
	font-weight: $font-weight-medium;
	text-decoration: inherit;
	text-transform: inherit;
}

@mixin body1 {
	@include typographyBase();
	font-size: fontSize(16px);
	line-height: $body1-line-height;
	letter-spacing: .5px;
	font-weight: $font-weight-regular;
	text-decoration: inherit;
	text-transform: inherit;
}

@mixin body2 {
	@include typographyBase();
	font-size: fontSize(14px);
	line-height: fontSize(20px);
	letter-spacing: .45px;
	font-weight: $font-weight-regular;
	text-decoration: inherit;
	text-transform: inherit;
}

@mixin caption {
	@include typographyBase();
	font-size: fontSize(12px);
	line-height: $caption-line-height;
	letter-spacing: .4px;
	font-weight: $font-weight-regular;
	text-decoration: inherit;
	text-transform: inherit;
}

@mixin button {
	@include typographyBase();
	font-size: fontSize(14px);
	line-height: fontSize(36px);
	letter-spacing: .75px;
	font-weight: $font-weight-medium;
	text-decoration: none;
	text-transform: uppercase;
}

@mixin overline {
	@include typographyBase();
	font-size: fontSize(12px);
	line-height: fontSize(32px);
	letter-spacing: 1.5px;
	font-weight: $font-weight-medium;
	text-decoration: none;
	text-transform: uppercase;
}

@mixin hardwareAccelerated {
	transform: translate3d(0, 0, 0);
}

//noinspection CssOverwrittenProperties
@mixin reset {
	-webkit-tap-highlight-color: rgba(0, 0, 0, 0);
	-webkit-tap-highlight-color: transparent;
	box-sizing: border-box;
}

@mixin code {
	font-family: $font-family-mono !important;
}

@mixin hostRtl($selectorArgs...) {

	@if length($selectorArgs) == 0 {

		// For those that don't
		:host([dir="rtl"]) {
			@content;
		}
	} @else {
		@each $currentSelector in $selectorArgs {

			// For those that don't
			:host([dir="rtl"]#{$currentSelector}) {
				@content;
			}
		}
	}
}

@mixin hostNotRtl($selectorArgs...) {

	@if length($selectorArgs) == 0 {

		// For those that don't
		:host(:not([dir="rtl"])) {
			@content;
		}
	} @else {
		@each $currentSelector in $selectorArgs {

			// For those that don't
			:host(:not([dir="rtl"])#{$currentSelector}) {
				@content;
			}
		}
	}
}